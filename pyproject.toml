[tool.poetry]
name = "src"
version = "0.0.0"
description = "Python Project Template"
authors = ["HuangFuSL <huangfusl@outlook.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
pyside6 = "^6.4.3"
pycryptodomex = "^3.17"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pre-commit = "^3.1.0"
pylint = "^2.16.2"
isort = "^5.12.0"
autopep8 = "^2.0.1"
poethepoet = "^0.21.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.main]
fail-under = 6
persistent = false
py-version = "3.10"
recursive = true
suggestion-mode = true

[tool.pylint.basic]
good-names-rgxs = "[a-z]"

[tool.poe.tasks]

    [tool.poe.tasks.P01]
    help = "Project 01: Hello World"
    sequence = [
        { cwd = "src", script = "build_ui:build_ui('01-hello-world')" },
        { cwd = "src", cmd = "python -m 01-hello-world" }
    ]

    [tool.poe.tasks.P02]
    help = "Project 02: Use Qt Creator to create a GUI application"
    sequence = [
        { cwd = "src", script = "build_ui:build_ui('02-QC-project')" },
        { cwd = "src", cmd = "python -m 02-QC-project" }
    ]

    [tool.poe.tasks.P03]
    help = "Project 03: Netease cloud music decoder"
    sequence = [
        { cwd = "src", script = "build_ui:build_ui('03-ncmdecoder')" },
        { cwd = "src", cmd = "python -m 03-ncmdecoder" }
    ]
